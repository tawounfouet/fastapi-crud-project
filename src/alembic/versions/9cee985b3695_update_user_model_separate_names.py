"""update_user_model_separate_names

Revision ID: 9cee985b3695
Revises: 23202aace4b1
Create Date: 2025-07-31 02:22:57.842336

Business Context:
- TODO: Describe the business reason for this migration
- TODO: List any data impact or requirements
- TODO: Note any rollback considerations

Technical Notes:
- TODO: Describe any complex changes or constraints
- TODO: Note any performance implications
- TODO: Document any manual steps required

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '9cee985b3695'
down_revision = '23202aace4b1'
branch_labels = None
depends_on = None


def upgrade():
    """Apply migration changes."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_email_active', 'users', ['email', 'is_active'], unique=False)
    op.create_index('ix_user_super_active', 'users', ['is_superuser', 'is_active'], unique=False)
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    op.create_index(op.f('ix_users_is_superuser'), 'users', ['is_superuser'], unique=False)
    op.create_table('auth_login_attempts',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('successful', sa.Boolean(), nullable=False),
    sa.Column('failure_reason', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auth_login_attempts_created_at'), 'auth_login_attempts', ['created_at'], unique=False)
    op.create_index(op.f('ix_auth_login_attempts_email'), 'auth_login_attempts', ['email'], unique=False)
    op.create_table('auth_password_reset_tokens',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('token_hash', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auth_password_reset_tokens_created_at'), 'auth_password_reset_tokens', ['created_at'], unique=False)
    op.create_index(op.f('ix_auth_password_reset_tokens_email'), 'auth_password_reset_tokens', ['email'], unique=False)
    op.create_index(op.f('ix_auth_password_reset_tokens_token_hash'), 'auth_password_reset_tokens', ['token_hash'], unique=True)
    op.create_index(op.f('ix_auth_password_reset_tokens_user_id'), 'auth_password_reset_tokens', ['user_id'], unique=False)
    op.create_table('auth_refresh_tokens',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('token_hash', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('revoked', sa.Boolean(), nullable=False),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('device_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auth_refresh_tokens_created_at'), 'auth_refresh_tokens', ['created_at'], unique=False)
    op.create_index(op.f('ix_auth_refresh_tokens_token_hash'), 'auth_refresh_tokens', ['token_hash'], unique=True)
    op.create_index(op.f('ix_auth_refresh_tokens_user_id'), 'auth_refresh_tokens', ['user_id'], unique=False)
    op.create_table('demo_order',
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('customer_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('demo_product',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('stock_quantity', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_demo_product_name'), 'demo_product', ['name'], unique=False)
    op.create_table('user_profiles',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('bio', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('website', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('twitter_handle', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('linkedin_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('github_username', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('timezone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('theme', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('profile_public', sa.Boolean(), nullable=False),
    sa.Column('show_email', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_profiles_created_at'), 'user_profiles', ['created_at'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('session_token', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_session_expires', 'user_sessions', ['expires_at', 'is_active'], unique=False)
    op.create_index('ix_session_user_active', 'user_sessions', ['user_id', 'is_active'], unique=False)
    op.create_index(op.f('ix_user_sessions_created_at'), 'user_sessions', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_sessions_expires_at'), 'user_sessions', ['expires_at'], unique=False)
    op.create_index(op.f('ix_user_sessions_is_active'), 'user_sessions', ['is_active'], unique=False)
    op.create_index(op.f('ix_user_sessions_session_token'), 'user_sessions', ['session_token'], unique=True)
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    op.create_table('demo_order_item',
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('product_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['demo_order.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['demo_product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    """Rollback migration changes."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('demo_order_item')
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_session_token'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_is_active'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_expires_at'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_created_at'), table_name='user_sessions')
    op.drop_index('ix_session_user_active', table_name='user_sessions')
    op.drop_index('ix_session_expires', table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_user_profiles_created_at'), table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index(op.f('ix_demo_product_name'), table_name='demo_product')
    op.drop_table('demo_product')
    op.drop_table('demo_order')
    op.drop_index(op.f('ix_auth_refresh_tokens_user_id'), table_name='auth_refresh_tokens')
    op.drop_index(op.f('ix_auth_refresh_tokens_token_hash'), table_name='auth_refresh_tokens')
    op.drop_index(op.f('ix_auth_refresh_tokens_created_at'), table_name='auth_refresh_tokens')
    op.drop_table('auth_refresh_tokens')
    op.drop_index(op.f('ix_auth_password_reset_tokens_user_id'), table_name='auth_password_reset_tokens')
    op.drop_index(op.f('ix_auth_password_reset_tokens_token_hash'), table_name='auth_password_reset_tokens')
    op.drop_index(op.f('ix_auth_password_reset_tokens_email'), table_name='auth_password_reset_tokens')
    op.drop_index(op.f('ix_auth_password_reset_tokens_created_at'), table_name='auth_password_reset_tokens')
    op.drop_table('auth_password_reset_tokens')
    op.drop_index(op.f('ix_auth_login_attempts_email'), table_name='auth_login_attempts')
    op.drop_index(op.f('ix_auth_login_attempts_created_at'), table_name='auth_login_attempts')
    op.drop_table('auth_login_attempts')
    op.drop_index(op.f('ix_users_is_superuser'), table_name='users')
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_index('ix_user_super_active', table_name='users')
    op.drop_index('ix_user_email_active', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
